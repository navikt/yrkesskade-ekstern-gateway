spring:
  application.name: yrkesskade-ekstern-gateway
  cloud:
    gateway:
      httpclient:
        wiretap: true
      httpserver:
        wiretap: true
#      default-filters:
#        - RewritePath=/(?<base>.*?)/(?<segment>.*), /$\{segment}
      routes:
        - id: yrkesskade-melding-api
          uri: ${YRKESSKADE_MELDING_API}
          predicates:
            - Path=/api/v1/skademeldinger,/api/v3/**,/api/swagger-ui/**
        - id: yrkesskade-kodeverk
          uri: ${YRKESSKADE_KODEVERK}
          predicates:
            - Path=/api/v1/kodeverk/**

token:
  validation:
    scopes:
      yrkesskade-melding-api:
        - name: "nav:yrkesskade:skademelding.write"
          path: /api/v1/skademeldinger
        - name: "noscope.apidoc"
          path: /api/v3/**
        - name: "noscope.swaggerui"
          path: /api/swagger-ui/**
      yrkesskade-kodeverk:
        - name: "nav:yrkesskade:kodeverk.read"
          path: /api/v1/kodeverk/**

YRKESSKADE_MELDING_API_CLIENT_ID: ${NAIS_CLUSTER_NAME}:yrkesskade:yrkesskade-melding-api
MASKINPORTEN_WELL_KNOWN_URL: https://ver2.maskinporten.no/.well-known/oauth-authorization-server
no.nav.security.jwt:
  issuer:
    maskinporten:
      validation:
        optional-claims: aud,sub,nbf
      discoveryurl: ${MASKINPORTEN_WELL_KNOWN_URL}
      accepted_audience: unspecified # https://docs.digdir.no/docs/Maskinporten/maskinporten_guide_apitilbyder#eksempel-p%C3%A5-token
  client:
    registration:
      yrkesskade-melding-api:
        token-endpoint-url: https://fakedings.dev-gcp.nais.io/fake/tokenx
        grant-type: urn:ietf:params:oauth:grant-type:token-exchange
        scope: api://${YRKESSKADE_MELDING_API_CLIENT_ID}/.default
        authentication:
          client-id: ${TOKEN_X_CLIENT_ID}
          client-jwk: ${TOKEN_X_PRIVATE_JWK}
          client-auth-method: private_key_jwt
        token-exchange:
          audience: ${YRKESSKADE_MELDING_API_CLIENT_ID}

management:
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus, gateway
      base-path: /internal
      path-mapping.prometheus: prometheus
  metrics:
    export.prometheus.enabled: true
    tags:
      application: ${spring.application.name}

logging:
  level:
    reactor:
      netty: TRACE
    org:
      springframework:
        cloud:
          gateway: TRACE
